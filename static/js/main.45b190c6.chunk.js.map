{"version":3,"sources":["TodoItem.js","TodoInput.js","Buttons.js","App.js","index.js"],"names":["TodoItem","props","react_default","a","createElement","hidden","item","className","type","checked","completed","onChange","handleChange","id","style","fontStyle","color","textDecoration","text","onClick","handleDelete","TodoInput","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","bind","assertThisInitialized","event","setState","target","_this2","placeholder","onKeyDown","key","handleSubmit","Component","Buttons","todos","length","handleCheckAll","handleButtons","App","prevState","map","todo","newTodos","toConsumableArray","every","some","idGen","Date","now","unshift","filter","updatedTodos","_this3","todoItems","src_TodoItem","src_Buttons","src_TodoInput","React","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.45b190c6.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction TodoItem(props) {\n    const completedStyle = {\n        fontStyle: \"italic\",\n        color: \"#cdcdcd\",\n        textDecoration: \"line-through\"\n    }\n\n    return (\n        <div\n            hidden={props.item.hidden}  \n            className='container'\n        >\n            <div className=\"todo-item\">\n            <input \n                type=\"checkbox\" \n                checked={props.item.completed} \n                onChange={() => props.handleChange(props.item.id)}\n                hidden={props.item.hidden}\n            />\n            <p\n                style={props.item.completed ? completedStyle : null}\n                hidden={props.item.hidden}\n            >\n                {props.item.text}\n            </p>\n            <button\n                className='delete'\n                onClick={() => props.handleDelete(props.item)}\n                hidden={props.item.hidden}\n            >\n                -\n            </button>\n        </div>\n        </div>\n            \n    )\n}\n\nexport default TodoItem","import React, {Component} from 'react'\n\nclass TodoInput extends Component {\n  constructor () {\n    super()\n    this.state = {\n      value : ''\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  render() {\n    return (\n      <input\n        type='text'\n        placeholder='Got plans?'\n        className=\"todo-input\"\n        value={this.state.value}\n        onChange={this.handleChange}\n        onKeyDown={(event) => {\n          if (event.key === 'Enter') {\n            this.props.handleSubmit(this.state.value)\n            this.setState({value : ''})\n          }\n        } \n        }\n      >\n      </input>\n    )\n  }\n}\n\nexport default TodoInput","import React from 'react'\n\nfunction Buttons(props) {\n  if (props.todos.length) {\n    return (\n      <div className=\"buttons\">\n        <button className=\"markAll\" onClick={() => props.handleCheckAll()}>&#x2714;</button>\n        <span>|</span>\n        <button className=\"allItems\" onClick={() => props.handleButtons('All')}>All</button>\n        <button className=\"activeItems\" onClick={() => props.handleButtons('Active')}>Active</button>\n        <button className=\"completedItems\" onClick={() => props.handleButtons('Completed')}>Completed</button>\n      </div>\n    );\n  }\n  return null\n}\n\nexport default Buttons","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport \"./App.css\";\nimport TodoInput from \"./TodoInput\";\nimport Buttons from \"./Buttons\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: [],\n      type: \"All\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleButtons = this.handleButtons.bind(this);\n    this.handleCheckAll = this.handleCheckAll.bind(this);\n  }\n\n  handleChange(id) {\n    this.setState(prevState => {\n      const updatedTodos = prevState.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      });\n      return {\n        todos: updatedTodos\n      };\n    });\n  }\n\n  handleCheckAll() {\n    this.setState(prevState => {\n      const newTodos = [...prevState.todos];\n      if (newTodos.every(todo => todo.completed)) {\n        newTodos.map(todo => {\n          todo.completed = !todo.completed\n          return todo\n        })\n      } else if (newTodos.some(todo => !todo.completed)) {\n        newTodos.map(todo => {\n          todo.completed = true\n          return todo\n        })\n      }\n\n      return {\n        todos: newTodos\n      }\n    })\n  }\n\n  handleSubmit(value) {\n    this.setState(\n      prevState => {\n        const newTodos = [...prevState.todos];\n        const idGen = Date.now();\n        newTodos.unshift({\n          id: idGen,\n          text: value,\n          completed: false,\n          hidden: false\n        });\n        return {\n          todos: newTodos\n        };\n      },\n      () => this.handleButtons(this.state.type)\n    );\n  }\n\n  handleDelete(item) {\n    this.setState(prevState => {\n      const filteredTodos = prevState.todos.filter(todo => todo.id !== item.id);\n      return {\n        todos: filteredTodos\n      };\n    });\n  }\n\n  handleButtons(type) {\n    this.setState(prevState => {\n      const updatedTodos = [...prevState.todos];\n\n      if (type === \"All\") {\n        updatedTodos.map(todo => {\n          todo.hidden = false;\n\n          return todo;\n        });\n      } else if (type === \"Active\") {\n        updatedTodos.map(todo => {\n          todo.hidden = todo.completed\n\n          return todo;\n        });\n      } else if (type === \"Completed\") {\n        updatedTodos.map(todo => {\n          todo.hidden = !todo.completed\n\n          return todo;\n        });\n      }\n      \n      return {\n        todos: updatedTodos,\n        type\n      };\n    });\n  }\n\n  render() {\n    const todoItems = this.state.todos.map(item => (\n      <TodoItem\n        key={item.id}\n        item={item}\n        handleChange={this.handleChange}\n        handleDelete={this.handleDelete}\n      />\n    ));\n\n    return (\n      <div className=\"todo-list\">\n        <Buttons\n          todos={this.state.todos}\n          handleButtons={this.handleButtons}\n          handleCheckAll={this.handleCheckAll} />\n        <TodoInput handleSubmit={this.handleSubmit} />\n        {todoItems}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}